{"version":3,"file":"chunks/9234.abeee30220e336de25e2.min.js","mappings":"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","sources":["webpack://@patternslib/patterns-dist/./node_modules/@patternslib/patternslib/src/pat/close-panel/close-panel.js","webpack://@patternslib/patterns-dist/./node_modules/@patternslib/patternslib/src/pat/tooltip/tooltip.js"],"sourcesContent":["import Base from \"../../core/base\";\nimport dom from \"../../core/dom\";\n\nexport default Base.extend({\n    name: \"close-panel\",\n    trigger: \".close-panel\",\n\n    init() {\n        this.el.addEventListener(\"click\", (e) => {\n            // Find the first element which has a close-panel.\n            // This should the panel-root itself.\n            const panel = this.el.closest(\".has-close-panel\");\n\n            if (!panel) {\n                // No ``.has-close-panel``. Exiting.\n                return;\n            }\n\n            // Get the close panel method.\n            const close_method = dom.get_data(panel, \"close_panel\");\n\n            // Now execute the method and close the panel.\n            close_method && close_method(e);\n        });\n    },\n});\n","import $ from \"jquery\";\nimport Base from \"../../core/base\";\nimport dom from \"../../core/dom\";\nimport logging from \"../../core/logging\";\nimport Parser from \"../../core/parser\";\nimport events from \"../../core/events\";\nimport registry from \"../../core/registry\";\nimport utils from \"../../core/utils\";\n\n// Initialize close-panel functionality.\nimport \"../close-panel/close-panel\";\n\nconst log = logging.getLogger(\"pat-tooltip\");\n\nexport const parser = new Parser(\"tooltip\");\nconst all_positions = [\n    \"tl\",\n    \"tm\",\n    \"tr\",\n    \"rt\",\n    \"rm\",\n    \"rb\",\n    \"br\",\n    \"bm\",\n    \"bl\",\n    \"lb\",\n    \"lm\",\n    \"lt\",\n];\nparser.addArgument(\"position-list\", [], all_positions, true);\nparser.addArgument(\"position-policy\", \"auto\", [\"auto\", \"force\"]);\nparser.addArgument(\"trigger\", \"click\", [\"click\", \"hover\", \"none\"]);\nparser.addArgument(\"source\", \"title\", [\"ajax\", \"content\", \"title\"]);\nparser.addArgument(\"ajax-data-type\", \"html\", [\"html\", \"markdown\"]);\nparser.addArgument(\"closing\", \"auto\", [\"auto\", \"sticky\", \"close-button\"]);\nparser.addArgument(\"delay\");\nparser.addArgument(\"mark-inactive\", true);\nparser.addArgument(\"class\");\nparser.addArgument(\"target\", \"body\");\nparser.addArgument(\"arrow-padding\", null);\nparser.addArgument(\"url\", null);\n\n// Tippy Lifecycle-hooks\n// See: https://tippyjs.bootcss.com/lifecycle-hooks/\n// onCreate\n// onTrigger\n// onShow\n// onMount\n// onShown\n// onUntrigger\n// onHide\n// onHidden\n//\n// onBeforeUpdate\n// onAfterUpdate\n// onDestroy\n\nexport default Base.extend({\n    name: \"tooltip\",\n    trigger: \".pat-tooltip, .pat-tooltip-ng\",\n\n    tippy: null,\n\n    active_class: \"tooltip-active-hover\",\n    inactive_class: \"tooltip-inactive\",\n\n    async init() {\n        const el = this.el;\n\n        if (window.__patternslib_import_styles) {\n            import(\"tippy.js/dist/tippy.css\");\n        }\n        const Tippy = (await import(\"tippy.js\")).default;\n\n        this.options = parser.parse(el, this.options);\n        this.tippy_options = this.parseOptionsForTippy(this.options);\n\n        const defaultProps = {\n            animation: false,\n            arrow: true,\n            //'delay': [0, 1800],\n            //'duration': [325, 275],\n            hideOnClick: this.options.closing === \"close-button\" ? false : true,\n            ignoreAttributes: true,\n            interactive: true,\n            onHide: this._onHide.bind(this),\n            onShow: this._onShow.bind(this),\n            onMount: this._onMount.bind(this),\n            trigger: \"click\",\n        };\n\n        Tippy.setDefaultProps(defaultProps);\n        this.tippy = new Tippy(el, this.tippy_options);\n\n        if (el.getAttribute(\"title\")) {\n            // Remove title attribute to disable browser's built-in tooltip feature\n            el.removeAttribute(\"title\");\n        }\n\n        if (this.options.trigger === \"click\" && this.options.source === \"ajax\") {\n            // prevent default action for \"click\" and \"mouseenter click\"\n            events.add_event_listener(\n                el,\n                \"click\",\n                \"pat-tooltip--click-prevent-default\",\n                (event) => {\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n            );\n        }\n\n        if (this.options.trigger === \"click\") {\n            this.active_class = \"tooltip-active-click\";\n        }\n        if (this.options.markInactive) {\n            // Initially mark as inactive\n            el.classList.add(this.inactive_class);\n        }\n    },\n\n    show() {\n        // Show this tooltip\n        // API method.\n        this.tippy.show();\n    },\n\n    async hide() {\n        // Hide this tooltip\n        await utils.timeout(1); // wait a tick for event being processed by other handlers.\n        this.tippy.hide();\n    },\n\n    destroy() {\n        // Remove this tooltip\n        // API method.\n        this.tippy.destroy();\n    },\n\n    parseOptionsForTippy(opts) {\n        const placement = (pos) => {\n            // note that Cornelis needs the positioning to be the placement of the thingy on the bubble\n            // tippy though refers to positioning as the placement of the bubble relatively to the reference element\n            // so we invert the meaning below. It's intentional.\n            const primary = (pos0) =>\n                ({\n                    t: \"bottom\",\n                    r: \"left\",\n                    b: \"top\",\n                    l: \"right\",\n                }[pos0]);\n\n            const secondary = (pos1) =>\n                ({\n                    l: \"-start\",\n                    r: \"-end\",\n                    m: \"\",\n                    t: \"-start\",\n                    b: \"-end\",\n                }[pos1]);\n\n            return `${primary(pos[0])}${secondary(pos[1])}`;\n        };\n\n        const tippy_options = { popperOptions: { modifiers: [] } };\n\n        if (opts.arrowPadding !== null) {\n            tippy_options.popperOptions.modifiers.push({\n                name: \"arrow\",\n                options: {\n                    padding: parseInt(opts.arrowPadding, 10),\n                },\n            });\n        }\n\n        const parsers = {\n            position: () => {\n                if (!opts.position?.list?.length) {\n                    return;\n                }\n                tippy_options.placement = placement(opts.position.list[0]); // main position\n\n                const flip_options = {\n                    name: \"flip\",\n                    enabled: true,\n                };\n\n                if (opts.position.policy === \"force\") {\n                    flip_options.enabled = false;\n                } else if (opts.position.length > 1) {\n                    const fallbacks = opts.position.list.slice(1).map(placement);\n                    flip_options.fallbackPlacements = fallbacks;\n                }\n\n                tippy_options.popperOptions.modifiers.push(flip_options);\n            },\n\n            trigger() {\n                if (opts.trigger === \"hover\") {\n                    tippy_options.trigger = \"mouseenter focus\";\n                } else if (opts.trigger === \"none\") {\n                    tippy_options.trigger = \"manual\";\n                    tippy_options.hideOnClick = false;\n                }\n            },\n\n            source: () => {\n                let content;\n                if (opts.source === \"title\") {\n                    // Tooltip content from title attribute\n                    content = this.el.getAttribute(\"title\");\n                } else if (opts.source === \"content\") {\n                    // Tooltip content from trigger childs.\n                    content = this.el.innerHTML;\n                    tippy_options.allowHTML = true;\n                } else if (opts.source === \"ajax\") {\n                    // Tooltiop content from AJAX request.\n                    content = document.createElement(\"progress\");\n                    tippy_options.allowHTML = true;\n                }\n                tippy_options.content = content;\n            },\n\n            delay() {\n                if (opts.delay) {\n                    tippy_options.delay = [utils.parseTime(opts.delay), 0];\n                }\n            },\n\n            target: () => {\n                if (!opts.target) {\n                    return;\n                }\n                if (opts.target === \"parent\") {\n                    tippy_options.appendTo = \"parent\";\n                } else if (opts.target === \"body\") {\n                    tippy_options.appendTo = document.body;\n                } else {\n                    tippy_options.appendTo = document.querySelector(opts.target);\n                }\n            },\n        };\n\n        for (let arg in opts) {\n            switch (arg) {\n                case \"ajax-data-type\":\n                    arg = \"ajaxDataType\";\n                    break;\n                case \"mark-inactive\":\n                    arg = \"markInactive\";\n                    break;\n            }\n            parsers[arg] && parsers[arg](arg);\n        }\n\n        return tippy_options;\n    },\n\n    _initialize_content() {\n        // Initialize any other patterns.\n        registry.scan(this.tippy.popper);\n    },\n\n    async _onShow() {\n        if (this.options.closing !== \"auto\" && this.options.trigger === \"hover\") {\n            // no auto-close when hovering when closing mode is \"sticky\" or \"close-button\".\n            this.tippy.setProps({ trigger: \"click\" });\n        }\n\n        if (this.options.markInactive) {\n            this.el.classList.remove(this.inactive_class);\n            this.el.classList.add(this.active_class);\n        }\n\n        if (this.options.source === \"ajax\") {\n            await this._get_content();\n            // Also initialize content.\n            // Due to asynchronous ``_onShow`` the content might not be\n            // available before ``_onMount``.\n            this._initialize_content();\n        }\n    },\n\n    _onMount() {\n        // Notify parent patterns about injected content.\n        // Do not call pat-inject's handler, because all necessary\n        // initialization after injection is done here.\n        $(this.tippy.popper).trigger(\"patterns-injected\", [\n            { skipPatInjectHandler: true },\n            this.el,\n            this.tippy.popper,\n        ]);\n\n        if (this.options.closing === \"close-button\") {\n            // First, remove previously automatically added close buttons.\n            // Otherwise we would end up adding another close button with every\n            // click on it.\n            for (const close_button of this.tippy.popper.querySelectorAll(\n                \".pat-tooltip--close-button\"\n            )) {\n                close_button.parentNode.removeChild(close_button);\n            }\n\n            const close_button = document.createElement(\"button\");\n            close_button.setAttribute(\"class\", \"close-panel pat-tooltip--close-button\");\n            const content = this.tippy.popper.querySelector(\".tippy-content\");\n            content.parentNode.insertBefore(close_button, content);\n        }\n\n        if (this.options.class) {\n            for (let class_ of this.options.class.split(\" \")) {\n                this.tippy.popper.classList.add(class_);\n            }\n        }\n\n        // Add a generic non-tippy related class to identify the tooltip container\n        this.tippy.popper.classList.add(\"tooltip-container\");\n\n        // Store reference to method for closing panels on the tooltip element instance.\n        this.tippy.popper.classList.add(\"has-close-panel\");\n        dom.set_data(this.tippy.popper, \"close_panel\", this.hide.bind(this));\n\n        this._initialize_content();\n    },\n\n    _onHide() {\n        if (this.options.markInactive) {\n            this.el.classList.remove(this.active_class);\n            this.el.classList.add(this.inactive_class);\n        }\n\n        if (this.options.closing !== \"auto\" && this.options.trigger === \"hover\") {\n            // re-set hover behavior\n            this.tippy.setProps({ trigger: \"mouseenter focus\" });\n        }\n\n        if (this.options.source === \"ajax\") {\n            this.tippy.setContent(document.createElement(\"progress\"));\n        }\n    },\n\n    async _get_content(url = this.options.url) {\n        let selector;\n        ({ url, selector } = this.get_url_parts(url || this.el.getAttribute(\"href\")));\n        let content;\n        if (url) {\n            // Tooltip from remote page.\n            const handler = this._ajaxDataTypeHandlers[this.options.ajaxDataType];\n            try {\n                // TODO: use pat-inject, once it supports async\n                const response = await fetch(url, {\n                    headers: {\n                        Accept: \"text/html,application/xhtml+xml,application/xml\",\n                    },\n                });\n                const text = await response.text();\n                content = await handler(text, url, selector);\n            } catch (e) {\n                log.error(\"Error on ajax request. ${e}\");\n            }\n        } else if (selector) {\n            // Tooltip content from current DOM tree.\n            content = document.querySelector(selector);\n            content = content?.innerHTML || undefined;\n        }\n        if (content) {\n            this.tippy.setContent(content);\n            await utils.timeout(1); // Wait a tick before forceUpdate. Might fail due to unset popperInstance.\n            this.tippy.popperInstance.forceUpdate(); // re-position tippy after content is known.\n        }\n    },\n\n    async get_content(url = this.options.url) {\n        // API method: _get_content + _initialize_content\n        await this._get_content(url);\n        this._initialize_content();\n    },\n\n    get_url_parts(href) {\n        // Return the URL and a CSS ID selector.\n        let url, selector, query;\n        if (!href) {\n            return { url, selector };\n        }\n        [url, selector] = href.split(\"#\");\n        if (selector) {\n            selector = `#${selector}`;\n            [selector, query] = selector.split(\"?\");\n        }\n        if (query) {\n            url = `${url}?${query}`;\n        }\n        return { url, selector };\n    },\n\n    _ajaxDataTypeHandlers: {\n        html(text, url, selector) {\n            let tmp = document.createElement(\"div\");\n            tmp.innerHTML = text;\n            if (selector) {\n                tmp = tmp.querySelector(selector);\n            }\n            return tmp?.innerHTML || \"\";\n        },\n\n        async markdown(text, url, selector) {\n            const pat_markdown = await import(\"../markdown/markdown\");\n            const pat = pat_markdown.default.init($(\"<div/>\"));\n            const cfg = { url };\n            if (selector) {\n                cfg.source = selector;\n            }\n            const ret = await pat.renderForInjection(cfg, text);\n            return ret[0];\n        },\n    },\n});\n"],"names":["Base","name","trigger","init","this","el","addEventListener","e","panel","closest","close_method","dom","i","log","logging","parser","Parser","addArgument","tippy","active_class","inactive_class","window","__patternslib_import_styles","Tippy","default","options","parse","tippy_options","parseOptionsForTippy","defaultProps","animation","arrow","hideOnClick","closing","ignoreAttributes","interactive","onHide","_onHide","bind","onShow","_onShow","onMount","_onMount","setDefaultProps","getAttribute","removeAttribute","source","events","event","preventDefault","stopPropagation","markInactive","classList","add","show","hide","utils","destroy","opts","placement","pos","pos0","t","r","b","l","m","popperOptions","modifiers","arrowPadding","push","padding","parseInt","parsers","position","list","length","flip_options","enabled","policy","fallbacks","slice","map","fallbackPlacements","content","innerHTML","allowHTML","document","createElement","delay","target","appendTo","body","querySelector","arg","_initialize_content","registry","popper","setProps","remove","_get_content","$","skipPatInjectHandler","querySelectorAll","close_button","parentNode","removeChild","setAttribute","insertBefore","class","split","class_","setContent","url","get_url_parts","selector","handler","_ajaxDataTypeHandlers","ajaxDataType","fetch","headers","Accept","response","text","error","undefined","popperInstance","forceUpdate","get_content","href","query","html","tmp","markdown","pat_markdown","pat","cfg","renderForInjection","ret"],"sourceRoot":""}