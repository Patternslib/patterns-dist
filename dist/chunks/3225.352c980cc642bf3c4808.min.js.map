{"version":3,"file":"chunks/3225.352c980cc642bf3c4808.min.js","mappings":"0NAMMA,EAAS,IAAIC,EAAAA,EAAO,iBAC1BD,EAAOE,aAAa,UACpBF,EAAOE,aAAa,MACpBF,EAAOE,aAAa,YACpBF,EAAOE,aAAa,YAEpB,UAAeC,EAAAA,EAAAA,OAAY,CACvBC,KAAM,gBACNC,QAAS,qBACTC,QAASC,EAAAA,EAAAA,MAAY,qBAErBC,KAAM,SAAUC,EAAKC,GACjB,IAAIC,EAAUX,EAAOY,MAAMH,EAAKC,GACR,YAApBD,EAAII,KAAK,QACTJ,EAAIK,KACA,SACAC,IAAAA,OAAQ,WACA,OAAQJ,IACJK,KAAKC,cAAcN,GACnBK,KAAKE,eAAeT,EAAKE,GACtBK,KAAKG,UAAUV,EAAKE,GAElC,GAAEK,OAGPP,EAAIK,KACA,QACAC,IAAAA,OAAQ,WACA,WAAYJ,EACU,SAAlBA,EAAQS,OACRJ,KAAKK,YACFL,KAAKM,YAAYb,EAAKE,GACtB,OAAQA,IACXK,KAAKC,cAAcN,GACnBK,KAAKE,eAAeT,EAAKE,GACtBK,KAAKG,UAAUV,EAAKE,GAElC,GAAEK,OAIP,WAAYL,IACRK,KAAKO,eACLd,EAAIe,SAAS,YACbf,EAAII,KAAK,WAAY,aAErBJ,EAAIe,SAAS,cAGjB,OAAQb,GAAWK,KAAKC,cAAcN,KACtCF,EAAIe,SAAS,WACW,YAApBf,EAAII,KAAK,UACTJ,EAAII,KAAK,UAAW,WACpBJ,EAAIgB,aAAa,SAASC,MAAK,SAAUC,EAAOC,GAC5Cb,IAAEa,GAAMC,YAAY,aAAaL,SAAS,UAC7C,MAGL,aAAcb,GAA6C,QAAlCA,EAAQmB,SAASC,cAC1CpB,EAAQqB,MAAO,EACZrB,EAAQqB,MAAO,EAChB,aAAcrB,IAAUA,EAAQsB,SAAW,GACpD,EAEDd,UAAW,SAAUV,EAAKE,GACtB,IAAIuB,EAAOlB,KAAKV,QAAQ6B,IAAI,QACf,OAATD,GACAlB,KAAKV,QAAQ8B,IAAI,OAAQ,CAACzB,EAAQ0B,KAClCtB,IAAE,+BAA+BW,MAAK,WAClCX,IAAEC,MAAMa,YAAY,YAAYL,SAAS,aACzCT,IAAEC,MAAMsB,WAAW,WACtB,MAEDJ,EAAKK,KAAK5B,EAAQ0B,IAClBrB,KAAKV,QAAQ8B,IAAI,OAAQF,IAE7BzB,EAAIe,SAAS,UAChB,EAEDN,eAAgB,SAAUT,EAAKE,GAC3B,IAAIuB,EAAOlB,KAAKV,QAAQ6B,IAAI,QAE5B,GADA1B,EAAIoB,YAAY,WACI,IAAhBK,EAAKM,OACLxB,KAAKK,gBACF,CACH,IAAIoB,EAAYP,EAAKQ,QAAQ/B,EAAQ0B,IACrCH,EAAKS,OAAOF,EAAW,GACvBzB,KAAKV,QAAQ8B,IAAI,OAAQF,EAC5B,CACJ,EAEDjB,cAAe,SAAUN,GACrB,IAAIuB,EAAOlB,KAAKV,QAAQ6B,IAAI,QAC5B,OAAa,OAATD,GAEOA,EAAKQ,QAAQ/B,EAAQ0B,KAAO,CAG1C,EAEDhB,UAAW,WACPN,IAAE,gCAAgCW,MAAK,WACnCX,IAAEC,MAAMa,YAAY,aACpBd,IAAEC,MAAMQ,SAAS,WACpB,IAED,IADA,IAAIoB,EAAY7B,IAAE,8BACT8B,EAAI,EAAGA,EAAID,EAAUJ,OAAQK,IAAK,CACvC,IAAIC,EAAO/B,IAAE6B,EAAUC,IACnBnC,EAAOV,EAAOY,MAAMkC,EAAMA,EAAKC,QACnC/B,KAAKE,eAAe4B,EAAMpC,GACD,YAArBoC,EAAKjC,KAAK,SACViC,EAAKE,KAAK,WAAW,GAAO3C,QAAQ,SAE3C,CAEDW,KAAKV,QAAQ2C,OAAO,OACvB,EAED1B,YAAa,WACT,OAAoC,OAA7BP,KAAKV,QAAQ6B,IAAI,OAC3B,EAEDb,YAAa,SAAUb,EAAKE,GACxB,IAAIuB,EAAOlB,KAAKV,QAAQ6B,IAAI,QACxBe,EAAevC,EAAQsB,SAASkB,MAAM,KACtCC,EAAkB,GAEjBzC,EAAQqB,MAAMhB,KAAKK,YAExB,IAAK,IAAIwB,EAAI,EAAGA,EAAIK,EAAaV,OAAQK,IAAK,CAC1C,IAAIQ,EACA,qBAAuBH,EAAaL,GAAGS,QAAQ,OAAQ,IACvDC,EAAc9C,EAAIsC,KAAKM,GAC3BD,GAAmB,QAAUF,EAAaL,GAAvB,KAAwCU,EAAc,GAC5E,CAED,IAAIC,EAAOzC,IACP,iBACIJ,EAAQS,OACR,YACAT,EAAQsB,SACR,KACAmB,EALJ,mEAQIlB,EARJ,cAaJuB,EAAAA,EAAAA,KAAcD,GACdzC,IAAE,QAAQ2C,OAAOF,GACjBA,EAAKG,QACR,G","sources":["webpack://@patternslib/patterns-dist/./node_modules/@patternslib/pat-shopping-cart/src/pat-shopping-cart.js"],"sourcesContent":["import $ from \"jquery\";\nimport Base from \"@patternslib/patternslib/src/core/base\";\nimport Parser from \"@patternslib/patternslib/src/core/parser\";\nimport registry from \"@patternslib/patternslib/src/core/registry\";\nimport store from \"@patternslib/patternslib/src/core/store\";\n\nconst parser = new Parser(\"shopping-cart\");\nparser.add_argument(\"action\");\nparser.add_argument(\"id\");\nparser.add_argument(\"contents\");\nparser.add_argument(\"patterns\");\n\nexport default Base.extend({\n    name: \"shopping-cart\",\n    trigger: \".pat-shopping-cart\",\n    storage: store.local(\"pat-shopping-cart\"),\n\n    init: function ($el, opts) {\n        var options = parser.parse($el, opts);\n        if ($el.attr(\"type\") == \"checkbox\") {\n            $el.bind(\n                \"change\",\n                $.proxy(function () {\n                    if (\"id\" in options) {\n                        if (this.isAddedToCart(options)) {\n                            this.removeFromCart($el, options);\n                        } else this.addToCart($el, options);\n                    }\n                }, this)\n            );\n        } else {\n            $el.bind(\n                \"click\",\n                $.proxy(function () {\n                    if (\"action\" in options) {\n                        if (options.action == \"empty\") {\n                            this.emptyCart();\n                        } else this.processCart($el, options);\n                    } else if (\"id\" in options) {\n                        if (this.isAddedToCart(options)) {\n                            this.removeFromCart($el, options);\n                        } else this.addToCart($el, options);\n                    }\n                }, this)\n            );\n        }\n\n        if (\"action\" in options) {\n            if (this.cartIsEmpty()) {\n                $el.addClass(\"is-empty\");\n                $el.attr(\"disabled\", \"disabled\");\n            } else {\n                $el.addClass(\"has-items\");\n            }\n        }\n        if (\"id\" in options && this.isAddedToCart(options)) {\n            $el.addClass(\"in-cart\");\n            if ($el.attr(\"type\") == \"checkbox\") {\n                $el.attr(\"checked\", \"checked\");\n                $el.parentsUntil(\"lable\").each(function (index, elem) {\n                    $(elem).removeClass(\"unchecked\").addClass(\"checked\");\n                });\n            }\n        }\n        if (\"contents\" in options && options.contents.toLowerCase() == \"keep\") {\n            options.keep = true;\n        } else options.keep = false;\n        if (!(\"patterns\" in options)) options.patterns = \"\";\n    },\n\n    addToCart: function ($el, options) {\n        var cart = this.storage.get(\"cart\");\n        if (cart === null) {\n            this.storage.set(\"cart\", [options.id]);\n            $(\".pat-shopping-cart.is-empty\").each(function () {\n                $(this).removeClass(\"is-empty\").addClass(\"has-items\");\n                $(this).removeAttr(\"disabled\");\n            });\n        } else {\n            cart.push(options.id);\n            this.storage.set(\"cart\", cart);\n        }\n        $el.addClass(\"in-cart\");\n    },\n\n    removeFromCart: function ($el, options) {\n        var cart = this.storage.get(\"cart\");\n        $el.removeClass(\"in-cart\");\n        if (cart.length === 1) {\n            this.emptyCart();\n        } else {\n            var itemIndex = cart.indexOf(options.id);\n            cart.splice(itemIndex, 1);\n            this.storage.set(\"cart\", cart);\n        }\n    },\n\n    isAddedToCart: function (options) {\n        var cart = this.storage.get(\"cart\");\n        if (cart === null) {\n            return false;\n        } else if (cart.indexOf(options.id) > -1) {\n            return true;\n        } else return false;\n    },\n\n    emptyCart: function () {\n        $(\".pat-shopping-cart.has-items\").each(function () {\n            $(this).removeClass(\"has-items\");\n            $(this).addClass(\"is-empty\");\n        });\n        var cartItems = $(\".pat-shopping-cart.in-cart\");\n        for (var i = 0; i < cartItems.length; i++) {\n            var item = $(cartItems[i]);\n            var opts = parser.parse(item, item.data());\n            this.removeFromCart(item, opts);\n            if (item.attr(\"type\") == \"checkbox\") {\n                item.prop(\"checked\", false).trigger(\"change\");\n            }\n        }\n\n        this.storage.remove(\"cart\");\n    },\n\n    cartIsEmpty: function () {\n        return this.storage.get(\"cart\") === null;\n    },\n\n    processCart: function ($el, options) {\n        var cart = this.storage.get(\"cart\");\n        var patternsList = options.patterns.split(\" \");\n        var patternsDataStr = \"\";\n\n        if (!options.keep) this.emptyCart();\n\n        for (var i = 0; i < patternsList.length; i++) {\n            var patternDataId =\n                \"pat-shopping-cart-\" + patternsList[i].replace(\"pat-\", \"\");\n            var patternData = $el.data(patternDataId);\n            patternsDataStr += \"data-\" + patternsList[i] + \"=\" + '\"' + patternData + '\"';\n        }\n\n        var form = $(\n            '<form action=\"' +\n                options.action +\n                '\" class=\"' +\n                options.patterns +\n                '\" ' +\n                patternsDataStr +\n                ' method=\"post\">' +\n                '<input name=\"shopping-cart\" type=\"hidden\" value=\"' +\n                cart +\n                '\"/>' +\n                \"</form>\"\n        );\n\n        registry.scan(form);\n        $(\"body\").append(form);\n        form.submit();\n    },\n});\n"],"names":["parser","Parser","add_argument","Base","name","trigger","storage","store","init","$el","opts","options","parse","attr","bind","$","this","isAddedToCart","removeFromCart","addToCart","action","emptyCart","processCart","cartIsEmpty","addClass","parentsUntil","each","index","elem","removeClass","contents","toLowerCase","keep","patterns","cart","get","set","id","removeAttr","push","length","itemIndex","indexOf","splice","cartItems","i","item","data","prop","remove","patternsList","split","patternsDataStr","patternDataId","replace","patternData","form","registry","append","submit"],"sourceRoot":""}