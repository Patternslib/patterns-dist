{"version":3,"file":"chunks/7671.ac3d0602013c03ca5091.min.js","mappings":"8LAIMA,EAAS,I,SAAIC,GAAO,kBAC1BD,EAAOE,YAAY,SAAU,0BAE7B,UAAeC,EAAAA,EAAAA,OAAY,CACvBC,KAAM,iBACNC,QAAS,sBAETC,KAAM,SAA6BC,GAC/BC,KAAKC,QAAUT,EAAOU,MAAMF,KAAKG,GAAIH,KAAKC,SAC1C,IAAMG,EAAUC,IAAEL,KAAKC,QAAQK,QAAQC,QAAQ,oBAAoBC,QACnET,EAAIU,GACA,uBACAJ,IAAAA,MAAQL,KAAKU,aAAcV,KAAMA,KAAKC,QAAQK,SAElDP,EAAIQ,QAAQ,QACPC,QACAC,GAAG,SAAS,WACTV,EAAIY,IAAI,IACRP,EAAQQ,KAAKR,EAAQQ,OACxB,IACLP,IAAE,eAAgBL,KAAKC,QAAQK,QAAQO,KAAKd,EAAIe,KAAK,gBAAkB,GAC1E,EAEDJ,aAAc,SAAsBJ,EAAQS,GACxC,IAAMhB,EAAMM,IAAEU,EAAGT,QACXU,EAAaX,IAAEC,GAErB,GADAU,EAAWH,KAAKd,EAAIY,QACfZ,EAAIY,MAAMM,OAAQ,CACnB,IAAMC,EAAcnB,EAAIe,KAAK,eACzBI,GACAF,EAAWJ,KAAK,2BAA6BM,EAAc,QAElE,CACJ,G","sources":["webpack://@patternslib/patterns-dist/./node_modules/@patternslib/pat-content-mirror/src/pat-content-mirror.js"],"sourcesContent":["import $ from \"jquery\";\nimport Base from \"@patternslib/patternslib/src/core/base\";\nimport Parser from \"@patternslib/patternslib/src/core/parser\";\n\nconst parser = new Parser(\"content-mirror\");\nparser.addArgument(\"target\", \"p.content-mirror .text\");\n\nexport default Base.extend({\n    name: \"content-mirror\",\n    trigger: \".pat-content-mirror\",\n\n    init: function content_mirror_init($el) {\n        this.options = parser.parse(this.el, this.options);\n        const $mirror = $(this.options.target).parents(\"p.content-mirror\").first();\n        $el.on(\n            \"input propertychange\",\n            $.proxy(this.updateMirror, this, this.options.target)\n        );\n        $el.parents(\"form\")\n            .first()\n            .on(\"reset\", function () {\n                $el.val(\"\");\n                $mirror.html($mirror.html());\n            });\n        $(\".placeholder\", this.options.target).text($el.attr(\"placeholder\") || \"\");\n    },\n\n    updateMirror: function updateMirror(target, ev) {\n        const $el = $(ev.target);\n        const the_mirror = $(target);\n        the_mirror.text($el.val());\n        if (!$el.val().length) {\n            const placeholder = $el.attr(\"placeholder\");\n            if (placeholder) {\n                the_mirror.html('<em class=\"placeholder\">' + placeholder + \"</em>\");\n            }\n        }\n    },\n});\n"],"names":["parser","Parser","addArgument","Base","name","trigger","init","$el","this","options","parse","el","$mirror","$","target","parents","first","on","updateMirror","val","html","text","attr","ev","the_mirror","length","placeholder"],"sourceRoot":""}