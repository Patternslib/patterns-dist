{"version":3,"file":"chunks/1442.0a4a18fd5c172ac163a1.min.js","mappings":"6dACA,4gGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQ,g1CAIA,IAAMC,EAASC,EAAAA,EAAAA,UAAkB,eAEpBC,EAAS,IAAIC,EAAAA,EAAO,WACjCD,EAAOE,aAAa,MAAO,IAE3B,UAAeC,EAAAA,EAAAA,OAAY,CACvBC,KAAM,UACNC,QAAS,eACTC,UAAU,EAGVC,gBAAiB,0DAEjBC,KARuB,WAQhB,WACH,GAAyB,UAApBC,KAAKC,GAAGC,QAAb,CAIAF,KAAKG,QAAUZ,EAAOa,MAAMJ,KAAKC,GAAID,KAAKG,SAG1CE,OAAOC,iBAAiB,eAAgBN,KAAKO,OAAOC,KAAKR,MAAO,CAC5DS,SAAS,IAIW,IAAIC,kBAAiB,SAACC,GAC1C,GAAoB,cAAhBA,EAAOC,KAAsB,WACZD,EAAOE,cADK,IAC7B,IAAK,EAAL,qBAAsC,WACvB,EAAKZ,KACZZ,EAAOyB,MAAM,gBACb,EAAKP,SAEZ,CAN4B,+BAOhC,CACJ,IACeQ,QAAQf,KAAKC,GAAGe,WAAY,CAAEC,WAAW,IAvBtD,UA0BiBjB,KAAKC,GAAGiB,iBAAiBlB,KAAKF,kBA1B/C,IA0BH,IAAK,EAAL,qBAAoE,SAC1DQ,iBAAiB,QAASN,KAAKmB,KAAKX,KAAKR,MAClD,CA5BE,+BAGF,CA0BJ,EAEDoB,gBAvCuB,SAuCPC,GACZ,IAAMC,EAAUC,SAASC,cAAc,OACvCF,EAAQG,UAAYJ,EAEpB,IAAMK,EAASJ,EAAQK,cAAc,yBACrC,GAAID,EAAQ,WACSH,SAASL,iBAAiB,0BADnC,IACR,IAAK,EAAL,qBAAqE,KAA1DjB,EAA0D,QACjEZ,EAAOyB,MAAM,2BACbb,EAAGwB,UAAYC,EAAOD,UACtBG,EAAAA,EAAAA,KAAc3B,EACjB,CALO,+BAMX,CAED,IAAM4B,EAAUP,EAAQK,cAAc,iBACtC,GAAIE,EAAS,WACQN,SAASL,iBACtB,kEAFK,IACT,IAAK,EAAL,qBAEG,KAFQjB,EAER,QACCZ,EAAOyB,MAAM,6BACbb,EAAG6B,UAAYD,EAAQJ,UACvBG,EAAAA,EAAAA,KAAc3B,EACjB,CAPQ,+BAQZ,CAEDZ,EAAOyB,MAAM,sBAChB,EAEKK,KAlEiB,WAkEV,uHACT9B,EAAOyB,MAAM,kBACT,EAAKjB,SAFA,uBAGLR,EAAOyB,MAAM,kBAHR,6BAMJ,EAAKX,QAAQ4B,IANT,wDAST1C,EAAOyB,MAAM,WACb,EAAKjB,UAAW,EAVP,UAWcmC,MAAM,GAAD,OAAI,EAAK7B,QAAQ4B,IAAjB,eAXnB,eAWHE,EAXG,iBAYUA,EAASC,OAZnB,QAYHb,EAZG,OAaT,EAAKD,gBAAgBC,GACrBhC,EAAOyB,MAAM,UAdJ,6CAeZ,EAEKP,OAnFiB,WAmFR,uHACXlB,EAAOyB,MAAM,mBACR,EAAKjB,SAFC,uBAGPR,EAAOyB,MAAM,oBAHN,6BAMN,EAAKX,QAAQ4B,IANP,wDASX1C,EAAOyB,MAAM,aATF,SAUYkB,MAAM,GAAD,OAAI,EAAK7B,QAAQ4B,IAAjB,iBAVjB,cAULE,EAVK,iBAWQA,EAASC,OAXjB,QAWLb,EAXK,OAYX,EAAKD,gBAAgBC,GACrB,EAAKxB,UAAW,EAChBR,EAAOyB,MAAM,YAdF,6CAed,G","sources":["webpack://@patternslib/patterns-dist/./node_modules/@patternslib/pat-doclock/src/pat-doclock.js"],"sourcesContent":["import Base from \"@patternslib/patternslib/src/core/base\";\nimport logging from \"@patternslib/patternslib/src/core/logging\";\nimport Parser from \"@patternslib/patternslib/src/core/parser\";\nimport registry from \"@patternslib/patternslib/src/core/registry\";\n\nconst logger = logging.getLogger(\"pat.doclock\");\n\nexport const parser = new Parser(\"doclock\");\nparser.add_argument(\"url\", \"\");\n\nexport default Base.extend({\n    name: \"doclock\",\n    trigger: \".pat-doclock\",\n    _changed: false,\n\n    // fields on which to check for changes\n    changing_fields: \"input,select,textarea,fileupload,[contenteditable=true]\",\n\n    init() {\n        if (!this.el.tagName === \"FORM\") {\n            return;\n        }\n\n        this.options = parser.parse(this.el, this.options);\n\n        // unlock when changing page\n        window.addEventListener(\"beforeunload\", this.unlock.bind(this), {\n            capture: true,\n        });\n\n        // unlock when the form gets removed from the DOM\n        const remove_observer = new MutationObserver((record) => {\n            if (record.type === \"childList\") {\n                for (const el of record.removedNodes) {\n                    if (el === this.el) {\n                        logger.debug(\"form removed\");\n                        this.unlock();\n                    }\n                }\n            }\n        });\n        remove_observer.observe(this.el.parentNode, { childList: true });\n\n        // lock when elements are changed\n        for (const field of this.el.querySelectorAll(this.changing_fields)) {\n            field.addEventListener(\"input\", this.lock.bind(this));\n        }\n    },\n\n    inject_response(data) {\n        const data_el = document.createElement(\"div\");\n        data_el.innerHTML = data;\n\n        const status = data_el.querySelector(\"#global-statusmessage\");\n        if (status) {\n            for (const el of document.querySelectorAll(\"#global-statusmessage\")) {\n                logger.debug(\"replacing statusmessage\");\n                el.innerHTML = status.innerHTML;\n                registry.scan(el);\n            }\n        }\n\n        const content = data_el.querySelector(\"#content-core\");\n        if (content) {\n            for (const el of document.querySelectorAll(\n                \".quick-functions #saving-badge, .quick-functions #save-button\"\n            )) {\n                logger.debug(\"replacing quick functions\");\n                el.outerHTML = content.innerHTML;\n                registry.scan(el);\n            }\n        }\n\n        logger.debug(\"initialization done\");\n    },\n\n    async lock() {\n        logger.debug(\"entering lock\");\n        if (this._changed) {\n            logger.debug(\"already locked\");\n            return;\n        }\n        if (!this.options.url) {\n            return;\n        }\n        logger.debug(\"locking\");\n        this._changed = true;\n        const response = await fetch(`${this.options.url}?lock=true`);\n        const data = await response.text();\n        this.inject_response(data);\n        logger.debug(\"locked\");\n    },\n\n    async unlock() {\n        logger.debug(\"entering unlock\");\n        if (!this._changed) {\n            logger.debug(\"already unlocked\");\n            return;\n        }\n        if (!this.options.url) {\n            return;\n        }\n        logger.debug(\"unlocking\");\n        const response = await fetch(`${this.options.url}?unlock=true`);\n        const data = await response.text();\n        this.inject_response(data);\n        this._changed = false;\n        logger.debug(\"unlocked\");\n    },\n});\n"],"names":["i","logger","logging","parser","Parser","add_argument","Base","name","trigger","_changed","changing_fields","init","this","el","tagName","options","parse","window","addEventListener","unlock","bind","capture","MutationObserver","record","type","removedNodes","debug","observe","parentNode","childList","querySelectorAll","lock","inject_response","data","data_el","document","createElement","innerHTML","status","querySelector","registry","content","outerHTML","url","fetch","response","text"],"sourceRoot":""}